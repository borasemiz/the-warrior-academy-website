@import 'variables';

@mixin respond-to($breakpoint) {
  $raw-query: map-get($breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(
      type-of($raw-query) == 'string',
      unquote($raw-query),
      inspect($raw-query)
    );

    @media #{$query} {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. '
      + 'Please make sure it is defined `$breakpoints` map.';
  }
}

@mixin inputBase {
  background-color: var(--c-input-background);
  color: var(--c-input-text);
  border-radius: 0;
  padding: 10px;
  border: none;
}

@mixin inputBordered {
  position: relative;
  border: #{$inputBorderThickness} solid var(--c-input-border);
  transition: border-color 300ms;

  &:after,
  &:before {
    content: "";
    display: block;
    position: absolute;
    background: linear-gradient(to right, var(--c-input-focused-state-border) 70%, var(--c-input-border));
    width: 140%;
    height: #{$inputBorderThickness};
    background-repeat: no-repeat;
    transform: translateX(-100%);
    left: 0;
    transition: transform 300ms;
  }

  &:before {
    top: -#{$inputBorderThickness};
  }

  &:after {
    bottom: -#{$inputBorderThickness};
  }
}

@mixin inputBorderedFocus {
  border-left-color: var(--c-input-focused-state-border);
  border-right-color: var(--c-input-focused-state-border);

  &:after,
  &:before {
    transform: translateX(0);
  }
}
